CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE PROFESSOR(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),OFFICENR VARCHAR(255))
CREATE INDEX PROFESSOR_LASTNAME_IDX ON PROFESSOR(LASTNAME)
CREATE MEMORY TABLE STUDENT(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,MATNR CHAR(7),FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),EMAIL VARCHAR(255))
CREATE INDEX STUDENT_LASTNAME_IDX ON STUDENT(LASTNAME)
CREATE INDEX STUDENT_MATNR_IDX ON STUDENT(MATNR)
CREATE MEMORY TABLE COURSE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROFESSORID INTEGER,TITLE VARCHAR(255),ECTS INTEGER,CONSTRAINT SYS_FK_69 FOREIGN KEY(PROFESSORID) REFERENCES PROFESSOR(ID))
CREATE INDEX COURSE_TITLE_IDX ON COURSE(TITLE)
CREATE MEMORY TABLE LECTURE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,COURSEID INTEGER,COMPULSORYATTENDANCE CHAR(1),CONSTRAINT SYS_FK_84 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID),CONSTRAINT SYS_CT_111 UNIQUE(COURSEID))
CREATE MEMORY TABLE LAB(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,COURSEID INTEGER,PLIMITATION INTEGER,CONSTRAINT SYS_FK_81 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID),CONSTRAINT SYS_CT_107 UNIQUE(COURSEID))
CREATE MEMORY TABLE EXAM(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,COURSEID INTEGER,EXDATE DATE,LOCATION VARCHAR(255),CONSTRAINT SYS_FK_139 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID))
CREATE MEMORY TABLE STUDENT_EXAM(EXAMID INTEGER NOT NULL,STUDENTID INTEGER NOT NULL,GRADE CHAR(2),PRIMARY KEY(EXAMID,STUDENTID),CONSTRAINT SYS_FK_160 FOREIGN KEY(EXAMID) REFERENCES EXAM(ID),CONSTRAINT SYS_FK_161 FOREIGN KEY(STUDENTID) REFERENCES STUDENT(ID),CONSTRAINT SYS_CT_168 UNIQUE(EXAMID,STUDENTID))
ALTER TABLE PROFESSOR ALTER COLUMN ID RESTART WITH 4
ALTER TABLE STUDENT ALTER COLUMN ID RESTART WITH 10
ALTER TABLE COURSE ALTER COLUMN ID RESTART WITH 6
ALTER TABLE LECTURE ALTER COLUMN ID RESTART WITH 3
ALTER TABLE LAB ALTER COLUMN ID RESTART WITH 5
ALTER TABLE EXAM ALTER COLUMN ID RESTART WITH 7
CREATE VIEW V_PROFESSOR_LABS (FIRSTNAME,LASTNAME,OFFICENR,TITLE,ECTS,PLIMITATION) AS SELECT professor.firstname, professor.lastname, professor.officenr, course.title, course.ects, lab.plimitation FROM course, professor, lab WHERE ( course.professorid = professor.ID AND lab.courseid = course.ID )
CREATE VIEW V_PROFESSOR_LECTURES (FIRSTNAME,LASTNAME,OFFICENR,TITLE,COMPULSORYATTENDANCE) AS SELECT professor.firstname, professor.lastname, professor.officenr, course.title, lecture.compulsoryattendance FROM course, professor, lecture WHERE ( course.professorid = professor.ID AND lecture.courseid = course.ID )
CREATE VIEW V_STUDENT_EXAM_COURSE_PROF (STUDENTID,STUDENTFIRSTNAME,STUDENTLASTNAME,STUDENTEMAIL,COURSEID,COURSETITLE,COURSEECTS,PROFESSORFIRSTNAME,PROFESSORLASTNAME,EXAMDATE,EXAMLOCATION,EXAMGRADE) AS select \u000astudent.id as studentid,\u000astudent.firstname as studentfirstname,\u000astudent.lastname as studentlastname,\u000astudent.email as studentemail,\u000acourse.id as courseid,\u000acourse.title as coursetitle,\u000acourse.ects as courseects,\u000aprofessor.firstname as professorfirstname,\u000aprofessor.lastname as professorlastname,\u000aexam.exdate as examdate,\u000aexam.location as examlocation,\u000astudent_exam.grade as examgrade\u000afrom\u000astudent \u000ajoin student_exam on (student_exam.studentid=student.id)\u000ajoin exam on (student_exam.examid = exam.id)\u000ajoin course on (exam.courseid = course.id)\u000ajoin professor on (course.professorid = professor.id)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 0 MILLIS
SET SCHEMA PUBLIC
INSERT INTO PROFESSOR VALUES(0,'Alexander','Schatten','O 4')
INSERT INTO PROFESSOR VALUES(1,'Stefan','Bauer','O 3')
INSERT INTO PROFESSOR VALUES(2,'Petra','Schnitzer','O 2')
INSERT INTO PROFESSOR VALUES(3,'Christina','Huber','O 11')
INSERT INTO STUDENT VALUES(0,'0123456 ','Markus','Meier','abc')
INSERT INTO STUDENT VALUES(1,'0223432 ','Sandra','Silber','def')
INSERT INTO STUDENT VALUES(2,'0332492 ','Sabine','Gold','pol')
INSERT INTO STUDENT VALUES(3,'0119487 ','Hans','Abel','eer')
INSERT INTO STUDENT VALUES(4,'0338720 ','Christoph','Christopher','wer')
INSERT INTO STUDENT VALUES(5,'0123881 ','Daniel','Dibber','poe')
INSERT INTO STUDENT VALUES(6,'0333667 ','Kristof','Krill','qwe')
INSERT INTO STUDENT VALUES(7,'9933224 ','Peter','Bauer','fer')
INSERT INTO STUDENT VALUES(8,'0332980 ','Barbara','Peter','aas')
INSERT INTO STUDENT VALUES(9,'0993328 ','Andreas','Anders','qwe')
INSERT INTO COURSE VALUES(0,0,'E-Commerce Technologies',4)
INSERT INTO COURSE VALUES(1,1,'Software Engineering',6)
INSERT INTO COURSE VALUES(2,1,'Advanced Software Engineering',6)
INSERT INTO COURSE VALUES(3,2,'Einf\u00fchrung ins Programmieren',6)
INSERT INTO COURSE VALUES(4,3,'Datenbanktechnologien',3)
INSERT INTO COURSE VALUES(5,3,'Datenbanktechnologien',3)
INSERT INTO LECTURE VALUES(0,0,'Y')
INSERT INTO LECTURE VALUES(1,1,'N')
INSERT INTO LECTURE VALUES(2,5,'Y')
INSERT INTO LAB VALUES(0,2,50)
INSERT INTO LAB VALUES(3,4,75)
INSERT INTO LAB VALUES(4,3,100)
INSERT INTO EXAM VALUES(0,0,'2007-06-06','HS 1')
INSERT INTO EXAM VALUES(1,0,'2007-06-08','HS 2')
INSERT INTO EXAM VALUES(2,2,'2007-05-22','HS 1')
INSERT INTO EXAM VALUES(3,5,'2007-06-03','HS 5')
INSERT INTO EXAM VALUES(4,4,'2007-05-30','HS 3')
INSERT INTO EXAM VALUES(5,3,'2007-06-18','HS 3')
INSERT INTO STUDENT_EXAM VALUES(0,0,NULL)
INSERT INTO STUDENT_EXAM VALUES(0,1,'S1')
INSERT INTO STUDENT_EXAM VALUES(0,4,'B3')
INSERT INTO STUDENT_EXAM VALUES(0,5,NULL)
INSERT INTO STUDENT_EXAM VALUES(2,1,NULL)
INSERT INTO STUDENT_EXAM VALUES(2,3,'N5')
INSERT INTO STUDENT_EXAM VALUES(3,9,'S1')
INSERT INTO STUDENT_EXAM VALUES(4,9,'G2')
INSERT INTO STUDENT_EXAM VALUES(5,9,NULL)
