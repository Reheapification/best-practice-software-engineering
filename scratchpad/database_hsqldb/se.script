CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE PROFESSOR(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),OFFICENR VARCHAR(255))
CREATE MEMORY TABLE STUDENT(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,MATNR INTEGER,FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),EMAIL VARCHAR(255))
CREATE MEMORY TABLE EXAM(STUDENTID INTEGER NOT NULL,COURSEID INTEGER NOT NULL,EXDATE DATE,LOCATION VARCHAR(255),PRIMARY KEY(STUDENTID,COURSEID),CONSTRAINT SYS_FK_64 FOREIGN KEY(STUDENTID) REFERENCES STUDENT(ID))
CREATE MEMORY TABLE COURSE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,PROFESSORID INTEGER,TITLE VARCHAR(255),ECTS INTEGER,CONSTRAINT SYS_FK_69 FOREIGN KEY(PROFESSORID) REFERENCES PROFESSOR(ID))
CREATE MEMORY TABLE LECTURE(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,COURSEID INTEGER,COMPULSORYATTENDANCE CHAR(1),CONSTRAINT SYS_FK_84 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID))
CREATE MEMORY TABLE LAB(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,COURSEID INTEGER,PLIMITATION INTEGER,CONSTRAINT SYS_FK_81 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID))
ALTER TABLE EXAM ADD CONSTRAINT SYS_FK_72 FOREIGN KEY(COURSEID) REFERENCES COURSE(ID)
ALTER TABLE PROFESSOR ALTER COLUMN ID RESTART WITH 2
ALTER TABLE STUDENT ALTER COLUMN ID RESTART WITH 1
ALTER TABLE COURSE ALTER COLUMN ID RESTART WITH 3
ALTER TABLE LECTURE ALTER COLUMN ID RESTART WITH 2
ALTER TABLE LAB ALTER COLUMN ID RESTART WITH 1
CREATE VIEW V_STUDENT_LAB_EXAM (STUDENTFIRSTNAME,STUDENTLASTNAME,COURSETITLE,ECTS,COMPULSORYATTENDANCE,PROFFIRSTNAME,PROFLASTNAME,PROFOFFICENR,EXAMDATE,EXAMLOCATION) AS SELECT student.firstname AS studentfirstname, student.lastname AS studentlastname, course.title AS coursetitle, course.ects, lecture.compulsoryattendance, professor.firstname AS proffirstname, professor.lastname AS proflastname, professor.officenr AS profofficenr, exam.exdate AS examdate, exam.location AS examlocation FROM exam, student, course, professor, lecture WHERE ( exam.studentid = student.ID AND exam.courseid = course.ID AND course.professorid = professor.ID AND lecture.courseid = course.ID )
CREATE VIEW V_STUDENT_LECTURE_EXAM (STUDENTFIRSTNAME,STUDENTLASTNAME,COURSETITLE,ECTS,PROFFIRSTNAME,PROFLASTNAME,PROFOFFICENR,EXAMDATE,EXAMLOCATION,LABPLIMITATION) AS SELECT student.firstname AS studentfirstname, student.lastname AS studentlastname, course.title AS coursetitle, course.ects, professor.firstname AS proffirstname, professor.lastname AS proflastname, professor.officenr AS profofficenr, exam.exdate AS examdate, exam.location AS examlocation, lab.plimitation AS labplimitation FROM exam, student, course, professor, lab WHERE ( exam.studentid = student.ID AND exam.courseid = course.ID AND course.professorid = professor.ID AND lab.courseid = course.ID )
CREATE VIEW V_PROFESSOR_LABS (FIRSTNAME,LASTNAME,OFFICENR,TITLE,ECTS,PLIMITATION) AS SELECT professor.firstname, professor.lastname, professor.officenr, course.title, course.ects, lab.plimitation FROM course, professor, lab WHERE ( course.professorid = professor.ID AND lab.courseid = course.ID )
CREATE VIEW V_PROFESSOR_LECTURES (FIRSTNAME,LASTNAME,OFFICENR,TITLE,COMPULSORYATTENDANCE) AS SELECT professor.firstname, professor.lastname, professor.officenr, course.title, lecture.compulsoryattendance FROM course, professor, lecture WHERE ( course.professorid = professor.ID AND lecture.courseid = course.ID )
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 20
SET SCHEMA PUBLIC
INSERT INTO PROFESSOR VALUES(0,'Alexander','Schatten','O 4')
INSERT INTO PROFESSOR VALUES(1,'Stefan','Biffl','O 3')
INSERT INTO STUDENT VALUES(0,123456,'Markus','Demolsky','abc')
INSERT INTO EXAM VALUES(0,0,'2007-02-12','HS 4')
INSERT INTO EXAM VALUES(0,1,'2007-06-02','HS 3')
INSERT INTO EXAM VALUES(0,2,'2007-07-05','HS  5')
INSERT INTO COURSE VALUES(0,0,'E-Commerce Technologies',4)
INSERT INTO COURSE VALUES(1,1,'Software Engineering',6)
INSERT INTO COURSE VALUES(2,1,'Advanced Software Engineering',6)
INSERT INTO LECTURE VALUES(0,0,'Y')
INSERT INTO LECTURE VALUES(1,1,'N')
INSERT INTO LAB VALUES(0,2,50)
